import cv2
import matplotlib.pyplot as plt
import time

image = cv2.imread('cat.jpg')
# 픽셀 수 및 이미지 크기 확인 
print(image.shape)
print(image.size)

# 이미지 Numpy 객체의 특정 픽셀을 가리킵니다 
px = image[100, 100]

# B, G, R 순서로 출력됩니다 
# (단, Gray Scale인 경우에는 B, G, R로 구분되지 않습니다.)
print(px)

# R값만 출력하기 
print(px[2])
 

# OpenCV를 활용한 특정 범위 픽셀 변경 
image = cv2.imread('cat.jpg')

start_time = time.time()
for i in range(0, 100):
    for j in range(0, 100):
        image[i, j] = [255, 255, 255]
        
print("--- %s seconds ---" % (time.time() - start_time))


start_time = time.time()
image[0:100, 0:100] = [0, 0, 0]
print("--- %s seconds ---" % (time.time() - start_time))

plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.show()


# OpenCV를 이용한 ROI(Region of Interest: 관심 있는 영역) 추출
import cv2
import matplotlib.pyplot as plt

image = cv2.imread('cat.jpg')

# Numpy Slicing: ROI 처리 가능 
roi = image[200:350, 50:200]

# ROI 단위로 이미지 복사하기 
image[0:150, 0:150] = roi

plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.show()

# OpenCV를 활용한 픽셀별 색상 다루기 
import cv2 
import matplotlib.pyplot as plt 

# BGR 에서 R 빨간색 부분을 전부 0 으로 변경
image = cv2.imread('cat.jpg')
image[:, :, 2] = 0

plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.show()
