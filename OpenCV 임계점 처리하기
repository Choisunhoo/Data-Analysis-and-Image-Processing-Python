import cv2
import matplotlib.pyplot as plt

# Open CV 임계점 처리하기 

# cv2.threshold (image, thresh, max_value, type) 임계값을 기준으로 흑/백으로 분류하는 함수 
# image : 처리할 Gray Scale 이미지 
# thresh: 임계 값(전체 픽셀에 적용) 한계치 
# max_value: 임계 값을 넘었을 때 적용할 값 
# type: 임계값을 처리하는 방식 


image = cv2.imread('cat.jpg', cv2.IMREAD_GRAYSCALE)

images = [] 
ret, thres1 = cv2.threshold(image, 127, 255, cv2.THRESH_BINARY)
ret, thres2 = cv2.threshold(image, 127, 255, cv2.THRESH_BINARY_INV)
ret, thres3 = cv2.threshold(image, 127, 255, cv2.THRESH_TRUNC)
ret, thres4 = cv2.threshold(image, 127, 255, cv2.THRESH_TOZERO)
ret, thres5 = cv2.threshold(image, 127, 255, cv2.THRESH_TOZERO_INV)
images.append(thres1)
images.append(thres2)
images.append(thres3)
images.append(thres4)
images.append(thres5)

for i in images:
    plt.imshow(cv2.cvtColor(i, cv2.COLOR_GRAY2RGB))
    plt.show()
    
# 이미지의 적응 임계점 처리 

# cv2.adaptiveThreshold(image, max_value, adaptive_method, type, block_size, C)
# max_value: 임계 값을 넘었을 때 적용할 값 
# adaptive_method: 임계 값을 결정하는 계산 방법 
# type: 임계값을 처리하는 방식 
# block_size: 임계 값을 적용할 영역의 크기 
# C:평균이나 가중 평균에서 차감할 값

image = cv2.imread('cat', cv2.IMREAD_GRAYSCALE)

ret, thres1 = cv2.threshold(image, 127, 255, cv2.THRESH_BINARY)
thres2 = cv2.adaptiveThreshold(image, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 21, 3)

plt.imshow(cv2.cvtColor(image, cv2.COLOR_GRAY2RGB))
plt.show()

plt.imshow(cv2.cvtColor(thres1, cv2.COLOR_GRAY2RGB))
plt.show()

plt.imshow(cv2.cvtColor(thres2, cv2.COLOR_GRAY2RGB))
plt.show()
