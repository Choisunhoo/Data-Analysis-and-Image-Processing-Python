import cv2 
import matplotlib.pyplot as plt


# OpenCV 이미지 크기 조절
# 이미지를 지정후 matplotlib 라이브러리를 통해서 이미지를 출력 
image = cv2.imread('cat.jpg')
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.show()

# resize 함수를 통해서 가로와 세로의 길이를 2배 증가 시킨 후 expand라는 이름으로 저장 및 출력
expand = cv2.resize(image, None, fx=2.0, fy=2.0, interpolation = cv2.INTER_CUBIC)
plt.imshow(cv2.cvtColor(expand, cv2.COLOR_BGR2RGB))
plt.show()

# resize 함수를 통해서 가로와 세로의 길이를 0.8배 감소 시킨 후 shrink라는 이름으로 저장 및 출력
shrink = cv2.resize(image, None, fx=0.8, fy=0.8, interpolation = cv2.INTER_CUBIC)
plt.imshow(cv2.cvtColor(shrink, cv2.COLOR_BGR2RGB))
plt.show()

# OpenCV 이미지 위치 변경

import cv2
import numpy as np 
import matplotlib.pyplot as plt

image = cv2.imread('cat.jpg')
# 행과 열 정보만 저장합니다. 
height, width = image.shape[:2]

# 행의 왼쪽부터 오른쪽으로 50만큼 열의 위부터 아래쪽까지 10 만큼 설정
M = np.float32([[1, 0, 50], [0, 1, 10]])
dst = cv2.warpAffine(image, M, (width, height))

# 위치가 변경된 이미지 출력 
plt.imshow(cv2.cvtColor(dst, cv2.COLOR_BGR2RGB))
plt.show()

# 이미지 회전
# cv2,getRotationMatrix2D(center, angle, scale): 이미지 회전을 위한 변환 행렬 생성
# center: 회전 중심, angle: 회전 각도, scale: Scale Factor

import cv2
import numpy as np
import matplotlib.pyplot as plt

image = cv2.imread('cat.jpg')

# 행과 열 정보만 저장합니다. 
height, width = image.shape[:2]

# 중심을 행과 열의 가운대 값인 중간에 두고, 회전은 90도, 반시계 방항으로 설정 
M = cv2.getRotationMatrix2D((width / 2, height / 2), 90, 0.5)
dst = cv2.warpAffine(image, M, (width, height))

# 회전이 끝나고 저장된 이미지 출력
plt.imshow(cv2.cvtColor(dst, cv2.COLOR_BGR2RGB))
plt.show()
